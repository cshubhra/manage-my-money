<% hack ||= false %>
<% if transfer_item.new_record? %>
  <% # Hack is only used for new items added via JS %>
  <% # If rendered by RoR hack is not required <-> I know it is complicated %>
  <% id = 'PUT_ID_HERE' if hack %>
  <% id = transfer_item.object_id.abs.to_s unless hack %>
  <% id += transfer_item.transfer_item_type.to_s %>
  <% prefix = "transfer[new_transfer_items_attributes][#{id}]" %>
  <% value = nil %>

<%  else %>
  <% # The book says that the place in prefix array should be filled by RoR with transfer_item.id %>
  <% prefix = "transfer[existing_transfer_items_attributes][]" %>
  <% value =  transfer_item.value.abs %>
  <% id = transfer_item.error_id %>
<% end %>

<% fields_for prefix, transfer_item do |transfer_form| -%>

  <tr style="margin: 0px; padding: 0px;">
    <td id="transfer-item-errors-<%= id -%>" colspan="5" style="margin: 0px; padding: 0px;">
    </td>
  </tr>
  <tr class="transfer-item">
    <%= transfer_form.hidden_field :transfer_item_type %>
    <td> <%= transfer_form.select :category_id, @current_user.categories.map { |c| [c.name, c.id] } %> </td>
    <td> <%= transfer_form.text_field :description, :size=>40 %> </td>
    <td> <%= transfer_form.text_field :value, :size=>5, :value => value %> </td>
    <td> <%= transfer_form.select :currency_id, @current_user.visible_currencies.map{|c| [c.long_symbol, c.id] } %></td>
    <td> <%= link_to_function "UsuÅ„" , "$(this).up('.transfer-item').remove()" %>  </td>
  </tr>


<% end -%>



